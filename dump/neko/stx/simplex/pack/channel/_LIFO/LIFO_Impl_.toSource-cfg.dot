digraph graphname {
n22144 [shape=box,label="(22144)\nScopes: 0\nctrl = \"phi\"(ctrl, ctrl)\n_ = \"phi\"(_, _)\nhandler = \"phi\"(handler, handler)\nchannel = \"phi\"(channel, channel)\nchannel = \"phi\"(channel, channel)\nhandler = \"phi\"(handler, handler)\nvar recurse = \"fun\"(22132)\nvar out = recurse\nvar out = stx.simplex.core.data.Simplex.Wait(out)\nreturn null"];
n22143 [shape=box,label="(22143)\nScopes: 0\n_ = \"phi\"(_, _)\nhandler = \"phi\"(handler, handler)\nchannel = \"phi\"(channel, channel)\nchannel = \"phi\"(channel, channel)\nhandler = \"phi\"(handler, handler)\nreturn stx.simplex.pack._Control.Control_Impl_.lift(ctrl, \"fun\"(22134))"];
n22142 [shape=box,label="(22142)\nScopes: 0\nchannel = \"phi\"(channel, channel)\nchannel = \"phi\"(channel, channel)\nhandler = \"fun\"(22136)\nvar handler = handler\nreturn handler(`this)"];
n22141 [shape=box,label="(22141)\nScopes: 4, 0\nvar cause = cast channel[0]\nreturn stx.simplex.core.data.Simplex.Halt(cause)"];
n22140 [shape=box,label="(22140)\nScopes: 3, 0\nvar ft = cast channel[0]\nvar handler = tink.core._Future.Future_Impl_.map(ft, handler, null)\nreturn stx.simplex.core.data.Simplex.Held(handler)"];
n22139 [shape=box,label="(22139)\nScopes: 2, 0\nvar fn = cast channel[0]\nvar handler = stx.simplex.core.data.Control.Continue(stx.simplex.core.data.ChannelOp.Pull)\nvar handler = fn(handler)\nreturn handler(handler)"];
n22138 [shape=box,label="(22138)\nScopes: 1, 0\nvar tail = cast channel[1]\nvar head = cast channel[0]\nvar handler = handler(tail)\nreturn stx.simplex.core.data.Simplex.Emit(head, handler)"];
n22137 [shape=box,label="<function-end>
(22137)"];
n22136 [shape=box,label="<function-begin>
(22136)\nScopes: 0\nvar channel = @:exhaustive channel.index\n@:cond-branch channel"];
n22135 [shape=box,label="<function-end>
(22135)"];
n22134 [shape=box,label="<function-begin>
(22134)\nScopes: 0\nvar handler = null"];
n22133 [shape=box,label="<function-end>
(22133)"];
n22132 [shape=box,label="<function-begin>
(22132)\nScopes: 0"];
n22131 [shape=box,label="<function-end>
(22131)"];
n22130 [shape=box,label="<function-begin>
(22130)\nScopes: 0\nvar swallow = stx.simplex.pack.Processes.swallow"];
n1 [shape=box,label="<root>
(1)"];
n1 -> n22130[label="function"];
n22130 -> n22144[label="goto"];
n22130 -> n22132[label="function"];
n22132 -> n22143[label="goto"];
n22132 -> n22134[label="function"];
n22134 -> n22142[label="goto"];
n22134 -> n22136[label="function"];
n22136 -> n22141[label="branch"];
n22136 -> n22140[label="branch"];
n22136 -> n22139[label="branch"];
n22136 -> n22138[label="branch"];
n22138 -> n22137[label="goto"];
n22139 -> n22137[label="goto"];
n22140 -> n22137[label="goto"];
n22137 -> n22142[label="goto"];
n22141 -> n22137[label="goto"];
n22142 -> n22135[label="goto"];
n22135 -> n22143[label="goto"];
n22143 -> n22133[label="goto"];
n22133 -> n22144[label="goto"];
n22144 -> n22131[label="goto"];
}
